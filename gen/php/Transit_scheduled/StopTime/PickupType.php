<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/v1/gtfs-schedule.proto

namespace Transit_scheduled\StopTime;

use UnexpectedValueException;

/**
 * Indicates pickup method. Valid options are:
 *   0 or empty - Regularly scheduled pickup.
 *   1 - No pickup available.
 *   2 - Must phone agency to arrange pickup.
 *   3 - Must coordinate with driver to arrange pickup.
 *
 * Protobuf type <code>transit_scheduled.StopTime.PickupType</code>
 */
class PickupType
{
    /**
     * Generated from protobuf enum <code>PICKUP_TYPE_REGULARLY_SCHEDULED = 0;</code>
     */
    const PICKUP_TYPE_REGULARLY_SCHEDULED = 0;
    /**
     * Generated from protobuf enum <code>PICKUP_TYPE_NONE_AVAILABLE = 1;</code>
     */
    const PICKUP_TYPE_NONE_AVAILABLE = 1;
    /**
     * Generated from protobuf enum <code>PICKUP_TYPE_MUST_PHONE_AGENCY = 2;</code>
     */
    const PICKUP_TYPE_MUST_PHONE_AGENCY = 2;
    /**
     * Generated from protobuf enum <code>PICKUP_TYPE_MUST_COORDINATE_WITH_DRIVER = 3;</code>
     */
    const PICKUP_TYPE_MUST_COORDINATE_WITH_DRIVER = 3;

    private static $valueToName = [
        self::PICKUP_TYPE_REGULARLY_SCHEDULED => 'PICKUP_TYPE_REGULARLY_SCHEDULED',
        self::PICKUP_TYPE_NONE_AVAILABLE => 'PICKUP_TYPE_NONE_AVAILABLE',
        self::PICKUP_TYPE_MUST_PHONE_AGENCY => 'PICKUP_TYPE_MUST_PHONE_AGENCY',
        self::PICKUP_TYPE_MUST_COORDINATE_WITH_DRIVER => 'PICKUP_TYPE_MUST_COORDINATE_WITH_DRIVER',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PickupType::class, \Transit_scheduled\StopTime_PickupType::class);

